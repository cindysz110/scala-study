2018-07-18

Scala中函数的定义
    def 函数名（参数列表）：返回值 {函数体}
    def func(x:Int, y:Int, ...) : 返回值 = {
        ...
        xxxx    // 最后一行默认为返回值
    }

Range
    1 to 10 == 1.to(10)：Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    1 until 10 == 1.until(10)：Range(1, 2, 3, 4, 5, 6, 7, 8, 9)
    Range(1,10)：Range(1, 2, 3, 4, 5, 6, 7, 8, 9)
    Range(1,10,2)：Range(1, 3, 5, 7, 9)      // 第三个参数是步长，步长不为0

条件表达式
    val x = 100
    val res = if (x > 0) true else false
    println(res)


参数类型：
    默认参数
        默认参数：不传则使用默认参数，传值则使用传进去的值

    变长参数：可变参数
        参数个数不确定时，方便扩展

    命名参数（了解即可，工作中不常用）
        按照参数的顺序传参，或者写明参数名称传进去




面向对象

    构造函数：构造函数中的参数以及类中的属性（非private的）都能直接能够当做对象的属性来使用
    附属构造函数：第一行必须调用主构造器或者其他的附属构造器

    面向对象的三大特性：封装、继承、多态
    继承：
        1. 发生继承时，当我们创建子对象的时候，首先会调用父类的构造方法，然后才是调用子类的构造方法
           如果子类里面的属性不是父类里面已经有的，前面要加val修饰符，否则外面是访问不到的
        2. 继承必然是发生在子类和父类之间的，如果想重写父类中已有的方法时，一定需要添加override修饰符

抽象类
    类中有一个或者多个方法没有实现，换句话说：只有定义，没有具体实现。是不能直接使用的，必须要通过实现了该抽象类的属性或者方法来使用
